# .env vars needed
# TEST_PASSWORD= database password
# HOST_CERT_PATH= path to folder containing self signed cert in hosting machine 
# CONT_CERT_PATH= path to cert file on container 
# CERT_PASSWORD= password used to create cert file 

services:
  nginx_local_dev_proxy:
    container_name: nginx-local-dev-proxy
    image: nginx:1.21.3
    attach: false
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
      # Here we mount the local configuration for the Nginx instance
      - "./nginx-local-dev-proxy-container.conf:/etc/nginx/nginx.conf"
      # Here we mount the actual source code (or you can mount the build output)
      # - "./library_manager_client/src:/usr/share/nginx/html"
    # Enable this for detailed routing debug info
    command: [nginx-debug, '-g', 'daemon off;']

  db:
    container_name: library_manager_database
    build: database
    attach: false
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=library 
      
  backend:
    container_name: library_manager_backend
    build: library_manager_server
    attach: true
    ports:
      - 8080:8080
    environment:
      - library__dbUser=postgres
      - library__dbPassword=${DB_PASSWORD}
      - library__dbAddress=db
      - library__dbPort=5432
      - library__database=library
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8080;
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=${CONT_CERT_PATH}
    volumes:
      - "${HOST_CERT_PATH}:/https:ro"

  frontend:
    container_name: library_manager_client
    build: library_manager_client
    # attach: false
    # change to volume so it updates and what not
    ports:
      - 3000:3000
    environment:
      - VITE_SERVER_DOMAIN=http://localhost
    volumes:
      - ./library_manager_client/src:/app/src
      - ./library_manager_client/public:/app/public


  